CMAKE_MINIMUM_REQUIRED(VERSION 3.1 FATAL_ERROR)

# Download submodule on configuration
FIND_PACKAGE(Git QUIET)
IF(GIT_FOUND AND EXISTS "${PROJECT_SOURCE_DIR}/.git")
  EXECUTE_PROCESS(
    COMMAND ${GIT_EXECUTABLE} submodule update --init --recursive
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    RESULT_VARIABLE GIT_SUBMOD_RESULT)

  IF(NOT GIT_SUBMOD_RESULT EQUAL "0")
    MESSAGE(
      FATAL_ERROR
        "git submodule update --init --recursive failed with ${GIT_SUBMOD_RESULT}, please checkout submodules"
    )
  ENDIF(NOT GIT_SUBMOD_RESULT EQUAL "0")
ENDIF(GIT_FOUND AND EXISTS "${PROJECT_SOURCE_DIR}/.git")

INCLUDE(cmake/munkei-cmake/Munkei.cmake)
INCLUDE(MunkeiVersionFromGit)

# Get versioning information from the git repostiry
VERSION_FROM_GIT()

PROJECT(
  kmeans
  VERSION ${VERSION}
  LANGUAGES C)

INCLUDE_DIRECTORIES(include)

SET(CMAKE_C_STANDARD 11)
SET(CMAKE_C_STANDARD_REQUIRED True)

FIND_LIBRARY(MATH_LIBRARY m REQUIRED)

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})

# library
ADD_LIBRARY(${PROJECT_NAME} SHARED src/2d.c src/3d.c)
TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
                                                  $<INSTALL_INTERFACE:include>)
SET_TARGET_PROPERTIES(
  ${PROJECT_NAME}
  PROPERTIES LINKER_LANGUAGE C
             C_STANDARD 11
             PREFIX "")

# executable
IF("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
  ADD_EXECUTABLE(main examples/main.c)
  SET_TARGET_PROPERTIES(main PROPERTIES LINKER_LANGUAGE C C_STANDARD 11)

  IF(MATH_LIBRARY)
    TARGET_LINK_LIBRARIES(main ${PROJECT_NAME} ${MATH_LIBRARY})
  ENDIF(MATH_LIBRARY)
ENDIF("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
